name: Publish deb

on:
  release:
    types: [published]
  pull_request:
    branches:
      - '**'

jobs:
  publish-deb:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Build deb package
        if: success()
        run: |
          npm ci
          npx node-deb -- dist/ public/
      - name: Upload deb package
        if: success()
        uses: alexellis/upload-assets@0.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_paths: '["gateway-proxy_*"]'
      - name: Debug workflow if failed
        if: failure()
        run: |
          KEYS=$(curl -sSf -X POST https://eu.relay.tunshell.com/api/sessions)
          curl -sSf -X POST -H "Content-Type: application/json" -d "{\"text\": \"Branch: \`${{ github.head_ref }}\`\nUser: @${{ github.event.pull_request.user.login }}\nDebug shell: \`sh <(curl -sSf https://lets.tunshell.com/init.sh) L $(echo $KEYS | jq -r .peer2_key) \${TUNSHELL_SECRET} eu.relay.tunshell.com\`\"}" https://beehive.ethswarm.org/hooks/${{ secrets.TUNSHELL_KEY }}
          echo "Connect to github actions node using"
          echo "sh <(curl -sSf https://lets.tunshell.com/init.sh) L $(echo $KEYS | jq -r .peer2_key) \${TUNSHELL_SECRET} eu.relay.tunshell.com"
          curl -sSf https://lets.tunshell.com/init.sh | sh /dev/stdin T $(echo $KEYS | jq -r .peer1_key) ${{ secrets.TUNSHELL_SECRET }} eu.relay.tunshell.com
